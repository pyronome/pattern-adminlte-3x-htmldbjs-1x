<?php
if (strtolower(basename($_SERVER['PHP_SELF']))
        == strtolower(basename(__FILE__))) {
    header('HTTP/1.0 403 Forbidden');
    die();
}

function get_session(&$controller, &$columns, &$list, $parameters) {
    // start: check user get permission
    $directoryName = basename(dirname(__FILE__));
    $fileName = basename(__FILE__);

    includeLibrary('adminlte/checkUserGetPermission');
    $permissionResult = checkUserGetPermission($directoryName, $fileName);

    if ($permissionResult['error']) {
        $controller->errorCount = 1;
        $controller->lastError = $permissionResult['error_msg'];
        return false;
    }
    // end: check user get permission
    
    $columns = [
        'id',
        'searchText',
        'sortingColumn',
        'sortingASC',
        'page',
        'pageCount',
        'bufferSize'
    ];

    $list = [];

    includeLibrary('getModelSessionParameters');
    $sessionParameters = getModelSessionParameters('{{$ __value__}}');
    
    if (!isset($sessionParameters['page'])) {
        $pagename = '';
        if (isset($parameters[0])) {
            $pagename = htmlspecialchars($parameters[0]);
        } // if (isset($parameters[0])) {

        includeLibrary('adminlte/getPageLayout');
        $Widgets = getPageLayout($pagename);

        includeLibrary('adminlte/getRecordListLimit');
        $bufferSize = getRecordListLimit($Widgets, '{{$ __value__}}');
        
        includeModel('{{$ __value__}}');
        $list{{$ __value__}} = new {{$ __value__}}();
        $list{{$ __value__}}->bufferSize = 1;
        $list{{$ __value__}}->page = 0;
        $list{{$ __value__}}->addFilter('deleted','==', false);
        $list{{$ __value__}}->addSearchText($sessionParameters['searchText']);
        $list{{$ __value__}}->find();

        $pageCount = ceil($list{{$ __value__}}->getPageCount() / $bufferSize);


        includeLibrary('setModelSessionParameters');
        setModelSessionParameters('{{$ __value__}}', [
                'searchText' => '',
                'sortingColumn' => 'id',
                'sortingASC' => 2,
                'page' => 0,
                'pageCount' => $pageCount,
                'bufferSize' => $bufferSize
        ]);
    }

    $sessionParameters = getModelSessionParameters('{{$ __value__}}');

    $sessionParameters['id'] = 1;

    $columnCount = count($columns);

    for ($i = 0; $i < $columnCount; $i++) {
        $list[0][$columns[$i]] = isset($sessionParameters[$columns[$i]])
                ? $sessionParameters[$columns[$i]]
                : '';
    } // for ($i = 0; $i < $columnCount; $i++) {

    return;
}
?>