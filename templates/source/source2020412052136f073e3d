    /**
	 * getMultipleSelectionCSV - returns multiple selection property ids as CSV text.
	 *
	 * @param propertyName [String][in]: Property name
	 * @param parent_id [String][in]: Parent class id
	 *
	 * @return returns multiple selection property ids as CSV text.
	 */
	private function getMultipleSelectionCSV($propertyName, $parent_id = 0) {

		$multipleSelectionCSV = '';
		$multipleSelectionProperties = array();
{{MODEL{{$ ../../../../__item_index__/__value__}}_GETMULTIPLESELECTIONCSV_PROPERTIES}}

		if (!in_array($propertyName, $multipleSelectionProperties)) {
			return '';
		} // if (!in_array($propertyName, $multipleSelectionProperties)) {

		if (0 == $parent_id) {
			$parent_id = $this->id;
		} // if (0 == $parent_id) {

		$tableName = ('{{$ ../../../../name/__value__/__lowercase_text__}}' . strtolower($propertyName) . 'table');
		$SQLText = 'SELECT * FROM `'
				. $tableName
				. '` WHERE `{{$ ../../../../name/__value__/__lowercase_text__}}_id` = {{id}};';
		$SQLText = str_replace('{{id}}', intval($parent_id), $SQLText);
		$result = $this->__mySQLConnection->query($SQLText); 
		$multipleSelectionCSV = '';

        while ($row = $result->fetch_array(MYSQLI_ASSOC)) {
            
        	if ($multipleSelectionCSV != '') {
        		$multipleSelectionCSV .= ',';
        	} // if ($multipleSelectionCSV != '') {

        	$multipleSelectionCSV .= $row[strtolower($propertyName)];

        } // while ($row = mysql_fetch_array($arrResult)) {
                
        $result->free();
        return $multipleSelectionCSV;

	}
